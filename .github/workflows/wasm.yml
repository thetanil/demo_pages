name: wasm

on:
  push:
    paths:
      - "**"
      - ".github/workflows/wasm.yml"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: ${{ github.workspace }}/build
      PLATFORM: PLATFORM_WEB

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev
        shell: bash

      - name: Install Emscripten
        run: |
          mkdir -p ${{ env.PROJECT_BUILD_PATH }}
          git clone https://github.com/emscripten-core/emsdk.git ${{ env.PROJECT_BUILD_PATH }}/emsdk
          cd ${{ env.PROJECT_BUILD_PATH }}/emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ${{ env.PROJECT_BUILD_PATH }}/emsdk/emsdk_env.sh
          emcc --version
        shell: bash

      - name: Build Project
        run: |
          echo "PROJECT_BUILD_PATH: ${{ env.PROJECT_BUILD_PATH }}"
          echo "GITHUB_WORKSPACE: ${{ env.GITHUB_WORKSPACE }}"
          source ${{ env.PROJECT_BUILD_PATH }}/emsdk/emsdk_env.sh
          cd ${{ github.workspace }}/demo_pages
          make PLATFORM=${{ env.PLATFORM }}
          rm -rf ${{ env.PROJECT_BUILD_PATH }}/emsdk
          cp index.html ${{ env.PROJECT_BUILD_PATH }}/index.html

      - name: Tree
        run: |
          tree ${{ env.PROJECT_BUILD_PATH }}

      - name: Fix permissions
        run: |
          chmod -c -R +rX ${{ env.PROJECT_BUILD_PATH }} | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.PROJECT_BUILD_PATH }}/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      # environment created automatically by GitHub
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
