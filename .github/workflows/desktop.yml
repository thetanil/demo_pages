name: desktop

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROJECT_NAME: ${{ github.event.repository.name }} # demo_pages
      PROJECT_BUILD_PATH: ${{ github.event.repository.name }}/build
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_linux_x64
      PROJECT_CUSTOM_FLAGS: ""

    steps:
      - uses: actions/checkout@v4

      # makefile does this
      # - name: Checkout raylib repo
      #   uses: actions/checkout@v4
      #   with:
      #     repository: raysan5/raylib
      #     path: raylib

      # - name: Setup Release Paths
      #   run: |
      #     echo "PROJECT_RELEASE_PATH=${{ env.PROJECT_NAME }}_v${{ github.event.release.tag_name }}_linux_x64" >> $GITHUB_ENV
      #   shell: bash
      #   if: github.event_name == 'release' && github.event.action == 'published'

      - name: Setup Environment
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev
          # mkdir ${{ env.PROJECT_RELEASE_PATH }}
          # ls
        shell: bash

      # makefile does this
      # - name: Build raylib Library
      #   run: |
      #     cd raylib/src
      #     gcc --version
      #     make PLATFORM=${{ env.PLATFORM }} BUILD_MODE=RELEASE RAYLIB_LIBTYPE=STATIC RAYLIB_PROJECT_RELEASE_PATH=. -B

      - name: make
        run: |
          echo "pwd $(pwd)"
          echo "ls $(ls)"
          make PLATFORM=${{ env.PLATFORM }} all
